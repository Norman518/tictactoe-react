{"version":3,"sources":["index.js"],"names":["Square","props","winningSquares","length","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","includes","index","onClick","value","Board","_this","this","squares","_this2","map","index1","key","index2","react__WEBPACK_IMPORTED_MODULE_6__","renderSquare","React","Component","Game","_this3","Object","C_Users_Cake_Documents_GitHub_tictactoe_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_Cake_Documents_GitHub_tictactoe_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Cake_Documents_GitHub_tictactoe_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","xIsNext","stepNumber","coordinates","slice","calculateWinner","win","setState","concat","step","status","_this4","current","winner","moves","move","desc","jumpTo","handleClick","lines","i","_lines$i","C_Users_Cake_Documents_GitHub_tictactoe_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75f2160a.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nfunction Square(props) {\r\n  if (props.winningSquares.length > 0) {\r\n    return (\r\n      <button\r\n        className={\r\n          props.winningSquares.includes(props.index) ? \"square win\" : \"square\"\r\n        }\r\n        onClick={() => props.onClick({})}\r\n      >\r\n        {props.value}\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button className=\"square\" onClick={() => props.onClick({})}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(value, winningSquares) {\r\n    return (\r\n      <Square\r\n        winningSquares={winningSquares}\r\n        value={this.props.squares[value]}\r\n        index={value}\r\n        onClick={() => this.props.onClick(value)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return [0, 1, 2].map(index1 => (\r\n      <div key={index1} className=\"board-row\">\r\n        {[0, 1, 2].map(index2 => (\r\n          <Fragment key={index2 + index1 * 3}>\r\n            {this.renderSquare(index2 + index1 * 3, this.props.winningSquares)}\r\n          </Fragment>\r\n        ))}\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{ squares: Array(9).fill(null) }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      coordinates: [Array(9).fill(null)]\r\n    };\r\n  }\r\n  handleClick(value) {\r\n    const stepNumber = this.state.stepNumber;\r\n    const history = this.state.history.slice(0, stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const coordinates = this.state.coordinates;\r\n    if (calculateWinner(squares).win || squares[value]) {\r\n      return;\r\n    }\r\n    squares[value] = this.state.xIsNext ? \"X\" : \"O\";\r\n    switch (value) {\r\n      case 0:\r\n        coordinates[stepNumber] = \"(0,0)\";\r\n        break;\r\n      case 1:\r\n        coordinates[stepNumber] = \"(1,0)\";\r\n        break;\r\n      case 2:\r\n        coordinates[stepNumber] = \"(2,0)\";\r\n        break;\r\n      case 3:\r\n        coordinates[stepNumber] = \"(0,1)\";\r\n        break;\r\n      case 4:\r\n        coordinates[stepNumber] = \"(1,1)\";\r\n        break;\r\n      case 5:\r\n        coordinates[stepNumber] = \"(2,1)\";\r\n        break;\r\n      case 6:\r\n        coordinates[stepNumber] = \"(0,2)\";\r\n        break;\r\n      case 7:\r\n        coordinates[stepNumber] = \"(1,2)\";\r\n        break;\r\n      default:\r\n        coordinates[stepNumber] = \"(2,2)\";\r\n        break;\r\n    }\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      coordinates: coordinates,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0\r\n    });\r\n  }\r\n  render() {\r\n    const coordinates = this.state.coordinates;\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const squares = current.squares.slice();\r\n    let winningSquares = calculateWinner(squares).squares;\r\n    const winner = calculateWinner(squares).win;\r\n    const moves = history.map((step, move) => {\r\n      const desc = move\r\n        ? `Go to move #${move}, ${coordinates[move - 1]}`\r\n        : `Go to game start`;\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = `Winner: ${winner}`;\r\n    } else if (this.state.stepNumber === 9) {\r\n      status = \"This is a draw\";\r\n      winningSquares = { squares: null };\r\n    } else {\r\n      status = `This player: ${this.state.xIsNext ? \"X\" : \"O\"}`;\r\n      winningSquares = { squares: null };\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={value => this.handleClick(value)}\r\n            winningSquares={winningSquares}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return { win: squares[a], squares: lines[i] };\r\n    }\r\n  }\r\n  return { win: null, squares: null };\r\n}\r\n"],"sourceRoot":""}